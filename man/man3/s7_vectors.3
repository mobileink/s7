.Dd July 12, 2021
.Dt S7 3
.Sh NAME
.Nm S7
.Nd Vectors
.Sh LIBRARY
libs7, -ls7
.Sh SYNOPSIS
.In s7.h
.Ft bool
.Fn s7_is_vector "s7_pointer p"
(vector? p)
.Ft s7_int
.Fn s7_vector_length "s7_pointer vec"
(vector-length vec)
.Ft s7_int
.Fn s7_vector_rank "s7_pointer vect"
number of dimensions in vect
.Ft s7_int
.Fn s7_vector_dimension "s7_pointer vec, s7_int dim"
.Ft s7_pointer
.Fn *s7_vector_elements "s7_pointer vec"
a pointer to the array of s7_pointers
.Ft s7_int*
.Fn s7_int_vector_elements "s7_pointer vec"
.Ft s7_double*
.Fn s7_float_vector_elements "s7_pointer vec"
.Ft bool
.Fn s7_is_float_vector "s7_pointer p"
(float-vector? p)
.Ft bool
.Fn s7_is_int_vector "s7_pointer p"
(int-vector? p)
.Ft s7_pointer
.Fn s7_vector_ref "s7_scheme *sc, s7_pointer vec, s7_int index"
(vector-ref vec index)
.Ft s7_pointer
.Fn s7_vector_set "s7_scheme *sc, s7_pointer vec, s7_int index, s7_pointer a"
(vector-set! vec index a)
.Ft s7_pointer
.Fn s7_vector_ref_n "s7_scheme *sc, s7_pointer vector, s7_int indices, ..."
multidimensional vector-ref
.Ft s7_pointer
.Fn s7_vector_set_n "s7_scheme *sc, s7_pointer vector, s7_pointer value, s7_int indices, ..."
multidimensional vector-set!
.Ft s7_int
.Fn s7_vector_dimensions "s7_pointer vec, s7_int *dims, s7_int dims_size"
vector dimensions
.Ft s7_int
.Fn s7_vector_offsets "s7_pointer vec, s7_int *offs, s7_int offs_size"
.Ft s7_int
.Fn s7_int_vector_ref "s7_pointer vec, s7_int index"
.Ft s7_int
.Fn s7_int_vector_set "s7_pointer vec, s7_int index, s7_int value"
.Ft s7_double
.Fn s7_float_vector_ref "s7_pointer vec, s7_int index"
.Ft s7_double
.Fn s7_float_vector_set "s7_pointer vec, s7_int index, s7_double value"
.Ft s7_pointer
.Fn s7_make_vector "s7_scheme *sc, s7_int len"
(make-vector len)
.Ft s7_pointer
.Fn s7_make_int_vector "s7_scheme *sc, s7_int len, s7_int dims, s7_int *dim_info"
.Ft s7_pointer
.Fn s7_make_float_vector "s7_scheme *sc, s7_int len, s7_int dims, s7_int *dim_info"
.Ft s7_pointer
.Fn s7_make_float_vector_wrapper "s7_scheme *sc, s7_int len, s7_double *data, s7_int dims, s7_int *dim_info, bool free_data"
.Ft s7_pointer
.Fn s7_make_and_fill_vector "s7_scheme *sc, s7_int len, s7_pointer fill"
(make-vector len fill)
.Ft void
.Fn s7_vector_fill "s7_scheme *sc, s7_pointer vec, s7_pointer obj"
(vector-fill! vec obj)
.Ft s7_pointer
.Fn s7_vector_copy "s7_scheme *sc, s7_pointer old_vect"
.Ft s7_pointer
.Fn s7_vector_to_list "s7_scheme *sc, s7_pointer vect"
(vector->list vec)
.Sh DESCRIPTION
.Em (vect i)
is the same as
.Em (vector-ref vect i)
.Pp
.Em (set! (vect i) x)
is the same as
.Em (vector-set! vect i x)
.Pp
.Em (vect i j k)
accesses the 3-dimensional vect
.Pp
.Em (set! (vect i j k) x)
sets that element (
.Em vector-ref
and
.Em vector-set!
can also be used)
.Pp
.Em (make-vector (list 2 3 4))
returns a 3-dimensional vector with the given dimension sizes
.Pp
.Em (make-vector '(2 3) 1.0)
returns a 2-dim vector with all elements set to 1.0
.Sh EXAMPLES
.Bd -literal -offset indent
verbatim code here...
.Ed
.Pp
.Sh SEE ALSO
.Xr s7_datatypes 3 ,
.Xr s7_equality 3
.Pp
.Xr s7_booleans 3 ,
.Xr s7_characters 3 ,
.Xr s7_lists 3 ,
.Xr s7_numbers 3 ,
.Xr s7_pairs 3 ,
.Xr s7_strings 3
.Sh AUTHORS
.An Bill Schottstaedt Aq Mt bil@ccrma.stanford.edu
.An Mike Scholz
provided the FreeBSD support (complex trig funcs, etc)
.An Rick Taube, Andrew Burnson, Donny Ward, and Greg Santucci
provided the MS Visual C++ support
.An Kjetil Matheussen
provided the mingw support
.An chai xiaoxiang
provided the msys2 support
